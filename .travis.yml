language: go
go:
  - 1.12.x
git:
  depth: 1
notifications:
  email:
    on_success: never
env:
  GO111MODULE=on
stages:
  - test
  - publish_latest
  - release
jobs:
  include:
    - stage: test
      script:
        - go build ./...
#        - go test ./...
        - go get golang.org/x/tools/cmd/cover
        - go get github.com/mattn/goveralls
        - go test -v -covermode=count -coverprofile=coverage.out ./...
        - goveralls -coverprofile=coverage.out -service=travis-ci -repotoken $COVERALLS_TOKEN
    - stage: publish_latest
      script:
        - docker build -t ldonini/ocpp1.6-central-system:latest -f example/cs1.6/Dockerfile .
        - docker build -t ldonini/ocpp1.6-charge-point:latest -f example/cp1.6/Dockerfile .
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker push ldonini/ocpp1.6-central-system:latest
        - docker push ldonini/ocpp1.6-charge-point:latest
      if: branch == master
    - stage: release
      script:
        - docker build -t "ldonini/ocpp1.6-central-system:$TRAVIS_TAG" -f example/cs1.6/Dockerfile .
        - docker build -t "ldonini/ocpp1.6-charge-point:$TRAVIS_TAG" -f example/cp1.6/Dockerfile .
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker push "ldonini/ocpp1.6-central-system:$TRAVIS_TAG"
        - docker push "ldonini/ocpp1.6-charge-point:$TRAVIS_TAG"
      if: tag IS present
