// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// MockClientOpt is an autogenerated mock type for the ClientOpt type
type MockClientOpt struct {
	mock.Mock
}

type MockClientOpt_Expecter struct {
	mock *mock.Mock
}

func (_m *MockClientOpt) EXPECT() *MockClientOpt_Expecter {
	return &MockClientOpt_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: c
func (_m *MockClientOpt) Execute(c *ws.client) {
	_m.Called(c)
}

// MockClientOpt_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type MockClientOpt_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - c *ws.client
func (_e *MockClientOpt_Expecter) Execute(c interface{}) *MockClientOpt_Execute_Call {
	return &MockClientOpt_Execute_Call{Call: _e.mock.On("Execute", c)}
}

func (_c *MockClientOpt_Execute_Call) Run(run func(c *ws.client)) *MockClientOpt_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*ws.client))
	})
	return _c
}

func (_c *MockClientOpt_Execute_Call) Return() *MockClientOpt_Execute_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockClientOpt_Execute_Call) RunAndReturn(run func(*ws.client)) *MockClientOpt_Execute_Call {
	_c.Run(run)
	return _c
}

// NewMockClientOpt creates a new instance of MockClientOpt. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockClientOpt(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockClientOpt {
	mock := &MockClientOpt{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
