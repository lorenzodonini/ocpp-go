// Code generated by mockery v2.51.0. DO NOT EDIT.

package mocks

import (
	ws "github.com/lorenzodonini/ocpp-go/ws"
	mock "github.com/stretchr/testify/mock"
)

// MockConnectedHandler is an autogenerated mock type for the ConnectedHandler type
type MockConnectedHandler struct {
	mock.Mock
}

type MockConnectedHandler_Expecter struct {
	mock *mock.Mock
}

func (_m *MockConnectedHandler) EXPECT() *MockConnectedHandler_Expecter {
	return &MockConnectedHandler_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: c
func (_m *MockConnectedHandler) Execute(c ws.Channel) {
	_m.Called(c)
}

// MockConnectedHandler_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type MockConnectedHandler_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - c ws.Channel
func (_e *MockConnectedHandler_Expecter) Execute(c interface{}) *MockConnectedHandler_Execute_Call {
	return &MockConnectedHandler_Execute_Call{Call: _e.mock.On("Execute", c)}
}

func (_c *MockConnectedHandler_Execute_Call) Run(run func(c ws.Channel)) *MockConnectedHandler_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(ws.Channel))
	})
	return _c
}

func (_c *MockConnectedHandler_Execute_Call) Return() *MockConnectedHandler_Execute_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockConnectedHandler_Execute_Call) RunAndReturn(run func(ws.Channel)) *MockConnectedHandler_Execute_Call {
	_c.Run(run)
	return _c
}

// NewMockConnectedHandler creates a new instance of MockConnectedHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockConnectedHandler(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockConnectedHandler {
	mock := &MockConnectedHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
