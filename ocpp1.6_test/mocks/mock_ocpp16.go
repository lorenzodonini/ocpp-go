// Code generated by mockery v2.51.0. DO NOT EDIT.

package mocks

import (
	ocpp16 "github.com/lorenzodonini/ocpp-go/ocpp1.6"
	mock "github.com/stretchr/testify/mock"
)

// MockChargePointConnectionHandler is an autogenerated mock type for the ChargePointConnectionHandler type
type MockChargePointConnectionHandler struct {
	mock.Mock
}

type MockChargePointConnectionHandler_Expecter struct {
	mock *mock.Mock
}

func (_m *MockChargePointConnectionHandler) EXPECT() *MockChargePointConnectionHandler_Expecter {
	return &MockChargePointConnectionHandler_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: chargePoint
func (_m *MockChargePointConnectionHandler) Execute(chargePoint ocpp16.ChargePointConnection) {
	_m.Called(chargePoint)
}

// MockChargePointConnectionHandler_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type MockChargePointConnectionHandler_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - chargePoint ocpp16.ChargePointConnection
func (_e *MockChargePointConnectionHandler_Expecter) Execute(chargePoint interface{}) *MockChargePointConnectionHandler_Execute_Call {
	return &MockChargePointConnectionHandler_Execute_Call{Call: _e.mock.On("Execute", chargePoint)}
}

func (_c *MockChargePointConnectionHandler_Execute_Call) Run(run func(chargePoint ocpp16.ChargePointConnection)) *MockChargePointConnectionHandler_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(ocpp16.ChargePointConnection))
	})
	return _c
}

func (_c *MockChargePointConnectionHandler_Execute_Call) Return() *MockChargePointConnectionHandler_Execute_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockChargePointConnectionHandler_Execute_Call) RunAndReturn(run func(ocpp16.ChargePointConnection)) *MockChargePointConnectionHandler_Execute_Call {
	_c.Run(run)
	return _c
}

// NewMockChargePointConnectionHandler creates a new instance of MockChargePointConnectionHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockChargePointConnectionHandler(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockChargePointConnectionHandler {
	mock := &MockChargePointConnectionHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
